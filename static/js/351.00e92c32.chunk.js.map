{"version":3,"file":"static/js/351.00e92c32.chunk.js","mappings":"+NAEO,MAAMA,E,QAAqBC,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAQhCC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,KAAKC,YAAY,I,aCRjD,MAAMC,EAAeA,KACnBC,EAAAA,EAAAA,KAACX,EAAkB,CAAAY,SAAC,oB,6FCe7B,MAsDA,EAtDiBC,KACf,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAE9BC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,IAGvDG,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,GAchC,OAPAC,EAAAA,EAAAA,YAAU,KACRN,EAAsBC,EAAaM,MAAM,EAAGX,GAAQ,GACnD,CAACK,EAAcL,KAElBU,EAAAA,EAAAA,YAAU,KACRZ,GAASc,EAAAA,EAAAA,MAAa,GACrB,CAACd,KAEFe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlB,SAAA,EACED,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAAAnB,UACHiB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWpB,SAAA,CACe,IAAxBS,EAAaY,SAAgBtB,EAAAA,EAAAA,KAACD,EAAY,KAEzDmB,EAAAA,EAAAA,MAACK,EAAAA,EAAO,CAAAtB,SAAA,EACND,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,KAEXxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAe,CAACC,YAAalB,KAE9BR,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CACPC,QAASA,KACPtB,GAAWuB,GAAeA,EAAa,GAAE,aAMnD7B,EAAAA,EAAAA,KAAC8B,IAAU,CACTC,OAAQlB,EACRmB,eAjCoBC,IACxBA,EAAMC,iBACN/B,GAASc,EAAAA,EAAAA,MAAa,EAgClBkB,WAAYC,SAASC,KACrBC,MAAOC,EAAAA,EAAYtC,UAEnBD,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,QAEX,C","sources":["components/no-result- text/NoResultText.styled.js","components/no-result- text/NoResultText.jsx","pages/favorite/Favorite.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const NoResultTextStyled = styled.h2`\n  margin: 0 auto;\n\n  max-width: 700px;\n  width: max-content;\n\n  font-size: 24px;\n\n  color: ${({ theme }) => theme.colors.text.noResultText};\n`;\n","import { NoResultTextStyled } from \"./NoResultText.styled\";\n\nexport const NoResultText = () => {\n  return <NoResultTextStyled>No cars in list</NoResultTextStyled>;\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport { selectUsersFavorites } from \"redux/favorite/selectors\";\nimport { selectModalIsOpen } from \"redux/modal/selectors\";\nimport { closeModal } from \"redux/modal/modalSlice\";\n\nimport { NoResultText } from \"components/no-result- text/NoResultText\";\n\nimport ReactModal from \"react-modal\";\nimport { ModalStyles } from \"components/modal/Modal.styled\";\nimport { ModalInfo } from \"components/modal/modal-info/ModalInfo\";\nimport { Preview } from \"pages/catalog/Catalog.styled\";\nimport { FilterZone } from \"components/filter-zone/FilterZone\";\nimport { SpecialistsList } from \"components/specialists-list/SpecialistsList\";\nimport { LoadMore } from \"components/load-more/LoadMore\";\nimport { Main } from \"styles/Main\";\n\nconst Favorite = () => {\n  const dispatch = useDispatch();\n\n  const [number, setNumber] = useState(3);\n\n  const [visibleSpecialists, setVisibleSpecialists] = useState([]);\n\n  const isLoading = false;\n  const favoriteList = useSelector(selectUsersFavorites);\n  const modalIsOpen = useSelector(selectModalIsOpen);\n\n  const handleModalClose = (event) => {\n    event.preventDefault();\n    dispatch(closeModal());\n  };\n\n  useEffect(() => {\n    setVisibleSpecialists(favoriteList.slice(0, number));\n  }, [favoriteList, number]);\n\n  useEffect(() => {\n    dispatch(closeModal());\n  }, [dispatch]);\n  return (\n    <>\n      <Main>\n        <div className=\"container\">\n          {!isLoading && favoriteList.length === 0 && <NoResultText />}\n\n          <Preview>\n            <FilterZone></FilterZone>\n\n            <SpecialistsList specialists={visibleSpecialists} />\n\n            <LoadMore\n              onClick={() => {\n                setNumber((prevNumber) => prevNumber + 3);\n              }}\n            />\n          </Preview>\n        </div>\n      </Main>\n      <ReactModal\n        isOpen={modalIsOpen}\n        onRequestClose={handleModalClose}\n        appElement={document.body}\n        style={ModalStyles}\n      >\n        <ModalInfo></ModalInfo>\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Favorite;\n"],"names":["NoResultTextStyled","styled","h2","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","text","noResultText","NoResultText","_jsx","children","Favorite","dispatch","useDispatch","number","setNumber","useState","visibleSpecialists","setVisibleSpecialists","favoriteList","useSelector","selectUsersFavorites","modalIsOpen","selectModalIsOpen","useEffect","slice","closeModal","_jsxs","_Fragment","Main","className","length","Preview","FilterZone","SpecialistsList","specialists","LoadMore","onClick","prevNumber","ReactModal","isOpen","onRequestClose","event","preventDefault","appElement","document","body","style","ModalStyles","ModalInfo"],"sourceRoot":""}